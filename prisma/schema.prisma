generator client {
  provider = "prisma-client-js"
  previewFeatures = ["selectRelationCount"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model comments {
  id           Int      @id @default(autoincrement())
  comment_text String   @db.VarChar(255)
  user_id      Int
  photo_id     Int
  created_at   DateTime @default(now()) @db.Timestamp(0)
  updated_at   DateTime @default(now()) @db.Timestamp(0)
  photos       photos   @relation(fields: [photo_id], references: [id])
  users        users    @relation(fields: [user_id], references: [id])

  @@index([photo_id], name: "photo_id")
  @@index([user_id], name: "user_id")
}

model follows {
  follower_id                      Int
  followee_id                      Int
  created_at                       DateTime @default(now()) @db.Timestamp(0)
  users_follows_followee_idTousers users    @relation("follows_followee_idTousers", fields: [followee_id], references: [id])
  users_follows_follower_idTousers users    @relation("follows_follower_idTousers", fields: [follower_id], references: [id])

  @@id([follower_id, followee_id])
  @@index([followee_id], name: "followee_id")
}

model likes {
  user_id    Int
  photo_id   Int
  created_at DateTime @default(now()) @db.Timestamp(0)
  photos     photos   @relation(fields: [photo_id], references: [id])
  users      users    @relation(fields: [user_id], references: [id])

  @@id([user_id, photo_id])
  @@index([photo_id], name: "photo_id")
}

model photo_tags {
  photo_id Int
  tag_id   Int
  photos   photos @relation(fields: [photo_id], references: [id])
  tags     tags   @relation(fields: [tag_id], references: [id])

  @@id([photo_id, tag_id])
  @@index([tag_id], name: "tag_id")
}

model photos {
  id         Int          @id @default(autoincrement())
  image_url  String       @db.VarChar(255)
  user_id    Int
  created_at DateTime     @default(now()) @db.Timestamp(0)
  users      users        @relation(fields: [user_id], references: [id])
  comments   comments[]
  likes      likes[]
  photo_tags photo_tags[]

  @@index([user_id], name: "user_id")
}

model tags {
  id         Int          @id @default(autoincrement())
  tag_name   String       @unique @db.VarChar(50)
  photo_tags photo_tags[]
}

model users {
  id                                 Int        @id @default(autoincrement())
  username                           String     @unique @db.VarChar(50)
  email                              String     @unique @db.VarChar(50)
  hash                               String     @db.VarChar(255)
  salt                               String     @db.VarChar(255)
  created_at                         DateTime   @default(now()) @db.Timestamp(0)
  updated_at                         DateTime   @default(now()) @db.Timestamp(0)
  comments                           comments[]
  follows_follows_followee_idTousers follows[]  @relation("follows_followee_idTousers")
  follows_follows_follower_idTousers follows[]  @relation("follows_follower_idTousers")
  likes                              likes[]
  photos                             photos[]
}
